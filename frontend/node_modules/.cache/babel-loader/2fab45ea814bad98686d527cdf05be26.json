{"ast":null,"code":"import { PRODUCT_LIST_ERROR, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_REQUEST } from '../Constants/ProductListConstant';\nimport axios from 'axios';\nexport const ProductListAction = async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    throw new Error('eror');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_LIST_ERROR,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\n_c = ProductListAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductListAction\");","map":{"version":3,"sources":["/home/jamoliddinovich/Projects/neo/proshop/frontend/src/Actions/ProductListAction.js"],"names":["PRODUCT_LIST_ERROR","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_REQUEST","axios","ProductListAction","dispatch","type","data","get","Error","payload","err","response","message"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,QAKS,kCALT;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAAvB;AACR,UAAM,IAAIC,KAAJ,CAAU,MAAV,CAAN;AACQJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,oBAAR;AAA8BS,MAAAA,OAAO,EAAEH;AAAvC,KAAD,CAAR;AAEH,GAPD,CAOE,OAAOI,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,kBAAR;AAA4BU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaL,IAAb,CAAkBM,OAAlC,GAA4CF,GAAG,CAACC,QAAJ,CAAaL,IAAb,CAAkBM,OAA9D,GAAwEF,GAAG,CAACE;AAAjH,KAAD,CAAR;AACH;AACJ,CAXM;KAAMT,iB","sourcesContent":["import {\n    PRODUCT_LIST_ERROR,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_REQUEST\n}\n    from '../Constants/ProductListConstant'\nimport axios from 'axios'\n\nexport const ProductListAction = async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/products')\nthrow new Error('eror')\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\n\n    } catch (err) {\n        dispatch({ type: PRODUCT_LIST_ERROR, payload: err.response && err.response.data.message ? err.response.data.message : err.message })\n    }\n}"]},"metadata":{},"sourceType":"module"}